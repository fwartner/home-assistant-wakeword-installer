name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install black isort pylint mypy
        pip install -e .

  release:
    needs: lint-and-test
    runs-on: ubuntu-latest
    # Only run on main branch pushes, not PRs
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
        # Ensure we're on the actual branch, not detached HEAD
        ref: ${{ github.ref }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Configure Git
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install python-semantic-release build

    - name: Check Git status and branch
      run: |
        echo "Current branch: $(git branch --show-current)"
        echo "Current HEAD: $(git rev-parse HEAD)"
        echo "Current ref: ${{ github.ref }}"
        git status

    - name: Python Semantic Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Make sure we're on the main branch
        git checkout main
        semantic-release version
        semantic-release publish

  hacs-validation:
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: HACS Validation
      uses: hacs/action@main
      with:
        category: integration
        ignore: brands
