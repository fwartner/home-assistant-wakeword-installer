[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "home-assistant-wakeword-installer"
dynamic = ["version"]
description = "Wakeword Installer for Home Assistant"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Florian Wartner", email = "florian@wartner.io"},
]
keywords = ["home-assistant", "wakeword", "voice-assistant", "openwakeword"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Home Automation",
]
requires-python = ">=3.11"
dependencies = [
    "homeassistant>=2024.1.0",
    "aiohttp",
    "aiofiles",
]

[project.urls]
Homepage = "https://github.com/fwartner/home-assistant-wakeword-installer"
Repository = "https://github.com/fwartner/home-assistant-wakeword-installer"
Issues = "https://github.com/fwartner/home-assistant-wakeword-installer/issues"
Changelog = "https://github.com/fwartner/home-assistant-wakeword-installer/blob/main/CHANGELOG.md"

[tool.setuptools_scm]
version_file = "custom_components/wakeword_installer/_version.py"

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
version_variables = [
    "custom_components/wakeword_installer/__init__.py:__version__",
]
build_command = "pip install build && python -m build"
branch = "main"
upload_to_pypi = false
upload_to_release = true
upload_to_repository = false
remove_dist = false
commit_author = "github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>"
commit_message = "chore(release): {version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = [
    "^Merge pull request.*",
    "^Merge branch.*",
    "^Bump version.*",
    "^chore\\(release\\):.*",
]

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote.token]
env = "GITHUB_TOKEN"

# Development tools configuration
[tool.black]
target-version = ["py311"]
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pylint.MASTER]
load-plugins = [
    "pylint.extensions.code_style",
    "pylint.extensions.typing",
]

[tool.pylint.BASIC]
good-names = [
    "_",
    "ex",
    "fp",
    "i",
    "id",
    "j",
    "k",
    "on",
    "Run",
    "T",
]

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "too-few-public-methods",
    "too-many-instance-attributes",
    "too-many-public-methods",
    "too-many-branches",
    "too-many-arguments",
    "too-many-locals",
    "duplicate-code",
    "cyclic-import",
]

[tool.pylint.SIMILARITIES]
ignore-imports = true

[tool.pylint.FORMAT]
max-line-length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "homeassistant.*",
    "custom_components.*",
]
ignore_missing_imports = true
